# package containing hybrid encryption implementations of PQC primitives

package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

cc_library(
    name = "cecpq2_hybrid_config",
    srcs = ["cecpq2_hybrid_config.cc"],
    hdrs = ["cecpq2_hybrid_config.h"],
    include_prefix = "tink/experimental/pqcrypto/kem/",
    deps = [
        ":cecpq2_aead_hkdf_private_key_manager",
        ":cecpq2_aead_hkdf_public_key_manager",
        "//tink:registry",
        "//tink/aead:aead_config",
        "//tink/config:tink_fips",
        "//tink/hybrid:hybrid_decrypt_wrapper",
        "//tink/hybrid:hybrid_encrypt_wrapper",
        "//tink/util:status",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/memory",
    ],
)

cc_library(
    name = "cecpq2_hybrid_key_templates",
    srcs = ["cecpq2_hybrid_key_templates.cc"],
    hdrs = ["cecpq2_hybrid_key_templates.h"],
    include_prefix = "tink/experimental/pqcrypto/kem/",
    deps = [
        "//tink/aead:aead_key_templates",
        "//tink/daead:deterministic_aead_key_templates",
        "//tink/experimental/pqcrypto/proto:cecpq2_aead_hkdf_cc_proto",
        "//proto:common_cc_proto",
        "//proto:tink_cc_proto",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "cecpq2_aead_hkdf_dem_helper",
    srcs = ["cecpq2_aead_hkdf_dem_helper.cc"],
    hdrs = ["cecpq2_aead_hkdf_dem_helper.h"],
    include_prefix = "tink/experimental/pqcrypto/kem/",
    deps = [
        "//tink:aead",
        "//tink:deterministic_aead",
        "//tink:registry",
        "//tink/daead/subtle:aead_or_daead",
        "//proto:tink_cc_proto",
        "//tink/util:errors",
        "//tink/util:istream_input_stream",
        "//tink/util:protobuf_helper",
        "//tink/util:secret_data",
        "//tink/util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "cecpq2_aead_hkdf_private_key_manager",
    srcs = ["cecpq2_aead_hkdf_private_key_manager.cc"],
    hdrs = ["cecpq2_aead_hkdf_private_key_manager.h"],
    include_prefix = "tink/experimental/pqcrypto/kem/",
    deps = [
        ":cecpq2_aead_hkdf_dem_helper",
        ":cecpq2_aead_hkdf_public_key_manager",
        "//tink:core/key_type_manager",
        "//tink:core/private_key_type_manager",
        "//tink:hybrid_decrypt",
        "//tink/experimental/pqcrypto/kem/subtle:cecpq2_aead_hkdf_hybrid_decrypt",
        "//tink/experimental/pqcrypto/kem/subtle:cecpq2_subtle_boringssl_util",
        "//tink/experimental/pqcrypto/proto:cecpq2_aead_hkdf_cc_proto",
        "//proto:tink_cc_proto",
        "//tink/subtle:random",
        "//tink/subtle:subtle_util",
        "//tink/util:enums",
        "//tink/util:secret_data",
        "//tink/util:status",
        "//tink/util:statusor",
        "//tink/util:validation",
        "@boringssl//:crypto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "cecpq2_aead_hkdf_public_key_manager",
    srcs = ["cecpq2_aead_hkdf_public_key_manager.cc"],
    hdrs = ["cecpq2_aead_hkdf_public_key_manager.h"],
    include_prefix = "tink/experimental/pqcrypto/kem/",
    deps = [
        ":cecpq2_aead_hkdf_dem_helper",
        "//tink:core/key_type_manager",
        "//tink:hybrid_encrypt",
        "//tink/experimental/pqcrypto/kem/subtle:cecpq2_aead_hkdf_hybrid_encrypt",
        "//tink/experimental/pqcrypto/proto:cecpq2_aead_hkdf_cc_proto",
        "//proto:common_cc_proto",
        "//proto:tink_cc_proto",
        "//tink/util:enums",
        "//tink/util:errors",
        "//tink/util:protobuf_helper",
        "//tink/util:status",
        "//tink/util:statusor",
        "//tink/util:validation",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

# tests

cc_test(
    name = "cecpq2_hybrid_config_test",
    size = "small",
    srcs = ["cecpq2_hybrid_config_test.cc"],
    deps = [
        ":cecpq2_aead_hkdf_private_key_manager",
        ":cecpq2_aead_hkdf_public_key_manager",
        ":cecpq2_hybrid_config",
        ":cecpq2_hybrid_key_templates",
        "//tink:hybrid_decrypt",
        "//tink:hybrid_encrypt",
        "//tink:keyset_handle",
        "//tink:registry",
        "//tink/config:tink_fips",
        "//tink/util:status",
        "//tink/util:test_matchers",
        "//tink/util:test_util",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "cecpq2_hybrid_key_templates_test",
    size = "small",
    srcs = ["cecpq2_hybrid_key_templates_test.cc"],
    deps = [
        ":cecpq2_aead_hkdf_private_key_manager",
        ":cecpq2_hybrid_config",
        ":cecpq2_hybrid_key_templates",
        "//tink/experimental/pqcrypto/proto:cecpq2_aead_hkdf_cc_proto",
        "//tink/util:test_matchers",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "cecpq2_aead_hkdf_dem_helper_test",
    size = "small",
    srcs = ["cecpq2_aead_hkdf_dem_helper_test.cc"],
    deps = [
        ":cecpq2_aead_hkdf_dem_helper",
        "//tink:registry",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/aead:xchacha20_poly1305_key_manager",
        "//tink/config:tink_config",
        "//tink/daead:aes_siv_key_manager",
        "//tink/util:secret_data",
        "//tink/util:test_matchers",
        "//tink/util:test_util",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "cecpq2_aead_hkdf_private_key_manager_test",
    srcs = ["cecpq2_aead_hkdf_private_key_manager_test.cc"],
    deps = [
        ":cecpq2_aead_hkdf_private_key_manager",
        ":cecpq2_aead_hkdf_public_key_manager",
        "//tink:hybrid_decrypt",
        "//tink:registry",
        "//tink/aead:aead_key_templates",
        "//tink/aead:aes_ctr_hmac_aead_key_manager",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/experimental/pqcrypto/proto:cecpq2_aead_hkdf_cc_proto",
        "//proto:aes_eax_cc_proto",
        "//proto:common_cc_proto",
        "//proto:tink_cc_proto",
        "//tink/util:status",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "//tink/util:test_util",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "cecpq2_aead_hkdf_public_key_manager_test",
    srcs = ["cecpq2_aead_hkdf_public_key_manager_test.cc"],
    deps = [
        ":cecpq2_aead_hkdf_private_key_manager",
        ":cecpq2_aead_hkdf_public_key_manager",
        "//tink:hybrid_encrypt",
        "//tink:registry",
        "//tink/aead:aead_key_templates",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/experimental/pqcrypto/proto:cecpq2_aead_hkdf_cc_proto",
        "//proto:aes_eax_cc_proto",
        "//proto:common_cc_proto",
        "//proto:tink_cc_proto",
        "//tink/util:status",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "//tink/util:test_util",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)
